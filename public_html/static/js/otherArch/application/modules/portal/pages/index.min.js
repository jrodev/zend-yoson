/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
var URL_BASE = window.location.protocol+"//"+window.location.host;
var URL_IMG = URL_BASE+"/static/img";
    
$(function() {
    /*
    $scrGmap=$('<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript" />');
    $scrGmap.bind('load', function(){ console.log('load script') });
    $scrGmap.appendTo('head');*/
    
    /*-----------------------------------------------------------------------------------
     * Datepicker range implementacion
     *//*-------------------------------------------------------------------------------*/
    var dateForMySql = function(date){
        var aDate=[], m=1+date.getMonth(), d=date.getDate();
        aDate.push( date.getFullYear() );
        aDate.push( m<10?('0'+m):m );
        aDate.push( d<10?('0'+d):d );
        return aDate.join('-');
    };
    var to = new Date();
    var from = new Date(to.getTime() - 1000 * 60 * 60 * 24 * 14);
    
    $('#datepicker-calendar').DatePicker({
        inline: true,
        date: [from, to],
        calendars: 3,
        mode: 'range',
        current: new Date(to.getFullYear(), to.getMonth() - 1, 1),
        onChange: function(dates, el) {
            console.log('mysql fecha:', dates[0].getFullYear()+'-'+(1+dates[0].getMonth())+'-'+dates[0].getDate());
            $('#fechaIni').val(dateForMySql(dates[0]));
            $('#fechaFin').val(dateForMySql(dates[1]));
            // update the range display
            $('#date-range-field span').text(dates[0].getDate() + ' ' + dates[0].getMonthName(true) + ', ' + dates[0].getFullYear() + ' - ' +
                    dates[1].getDate() + ' ' + dates[1].getMonthName(true) + ', ' + dates[1].getFullYear());
        }
    });

    // initialize the special date dropdown field
    $('#date-range-field span').text(from.getDate() + ' ' + from.getMonthName(true) + ', ' + from.getFullYear() + ' - ' +
            to.getDate() + ' ' + to.getMonthName(true) + ', ' + to.getFullYear());

    // bind a click handler to the date display field, which when clicked
    // toggles the date picker calendar, flips the up/down indicator arrow,
    // and keeps the borders looking pretty
    $('#date-range').bind('mouseleave', function() {

    });
    $('html').bind('click', function() {
        $('#datepicker-calendar').slideUp(400)
    });
    $('#date-range-field').bind('click', function(e) {
        e.stopPropagation();
        $('#datepicker-calendar').slideToggle(400);
        // switch to up-arrow
        var _up = ($('#date-range-field a').text().charCodeAt(0) == 9660);
        $('#date-range-field a').html(_up ? '&#9650;' : '&#9660;');
        $('#date-range-field').css({borderBottomLeftRadius: _up ? 0 : 5, borderBottomRightRadius: _up ? 0 : 5});
        $('#date-range-field a').css({borderBottomRightRadius: _up ? 0 : 5});
        return false;
    });
    /*-----------------------------------------------------------------------------------*/
    $(".alert").alert();
    
    // Loading imagenes de inmuebles   
    $('img.loading,img.loading2').each(function(i,e){
        (function(img, $this){
            var dataSrc  = $this.attr('data-src');
            var imgNoDis = URL_IMG+"/design/no_disponible2.jpg";
            img.onload = function(){ $this.attr('src',dataSrc); $this.removeClass('loading loading2'); };
            img.onerror = function(){ $this.attr('src',imgNoDis); $this.removeClass('loading loading2'); };
            img.src = dataSrc;
        })(new Image(),$(e))
    });
    
    // Loading image background body
    var bgImage=new Image(), bgUrl=URL_BASE+'/static/css/img/bgbody.jpg';
    bgImage.onload = function(){
        console.log('charge bg');
        $('body').addClass('bg-body').css('background-image','url("'+bgUrl+'")');
    };
    bgImage.src = bgUrl;
    
    /*-----------------------------------------------------------------------------------
     * Ultimos avisos
     *//*-------------------------------------------------------------------------------*/
    var lastAds = {
        time    : 3500,
        TIMER   : null,
        position: 0, // en el load ya esta en cero pero el start lo incremente antes de la animacion
        posAnt  : 0, // posicion  anterior
        cantAds : 8,
        $cantAcc: $(".accordion-heading").length,
        sBodyAcc: ".accordion-group .accordion-body",
        $HeadAcc: $(".accordion-heading a"),
        $gpoAcc : $(".accordion-group"),
        $acc    : $("#ultsInm"),
        init    : function(){
            console.log("ini!");
            var that = this;
            this.$acc.bind("mouseenter", function(){ that.stop()  })
                     .bind("mouseleave", function(){ that.start() });
            /*this.$HeadAcc.bind('click', function(){
                that.position = $(".accordion-heading a").index(this);
                //console.log("click-pos:"+that.position);
            });*/
            this.start();
        },
        start   : function(){ // Inicia y define el timer
            console.log("start!");
            this.TIMER = setInterval( (function(that){
                return function(){
                    console.log('that.posAnt:'+that.posAnt);
                    //if(that.position++>=(that.$cantAcc-1)) that.position=0;
                    //$(that.sBodyAcc+" :eq("+(that.position-1)+")").collapse('toggle');
                    //$(that.sBodyAcc+" :eq("+that.position+")").collapse('toggle');
                    that.posAnt = that.randAds(that.posAnt);
                    $("a[href='#list"+that.posAnt+"']").trigger('click');
                };
            })(this), this.time);
        },
        stop    : function(){
            console.log("stop!");
            clearInterval(this.TIMER);
        },
        randAds : function(iAnt){
            var min=1, max=this.cantAds;
            var iRand = Math.floor(Math.random()*(max-min+1))+min;
            console.log('randAds:',iAnt,iRand);
            return (iAnt==iRand)?this.randAds(iAnt):iRand;
        }
    };
    //lastAds.init();
    $('#carouselv').jsCarousel({
        onthumbnailclick: function(src) {
            alert(src); 
        }, autoscroll:true, masked:false, itemstodisplay:3, orientation:'v', controls:false
    });

    /*---------------------------------------------------------------------------------------*/
    /*
    $(".content-casas img, .content-dptos img")
    .bind('load', function(){ console.log('load:',this); })
    .bind('error', function(){
        console.log('error:-->',$(this).attr('src')); 
        $(this).attr('src',URL_IMG+"/design/no_disponible2.jpg"); 
    });*/
    
    // Selects Dependientes
    var SelDep = (function(Sb){

        /*@param url:  ingresado atravez del schema de modulos 'ctrll/par1/$1/par2/$2'
         *@param pars: ingresado dentro de la funcion que dispara evento (como pejm: id option seleccionado)*/
        var btnSubmit = function(child){return $(child).parents('form:eq(0)').find('[type="submit"]')};

        var setUrl = function(url, pars){
            return url.replace(/\$([1-9]+)/gi, function(res, match){
                return pars[parseInt(match)-1];
            });
        };
        /*@param url: url valida del script que devolvera la data
         *@param fnc: funcion que procesara la respuesta enviada como parametro*/
        var ajxReq = function(url, fnc){
            $.ajax({url:URL_BASE+url, type:'get', dataType:'json', success:fnc});
        };
        /* @private variable que alamcena arbol de selectores de dependencias*/
        var treeDeps = {}; 

        return {
            /*Bolean: Existe o no class btn*/
            clsBtn:false,
            /*Public Constructor : Inicializa el modulo (Es el que se ejecuta en el schema @modules)*/
            init: function(oParams){
                console.log('oParams:---->>',oParams);
                var l=oParams.length, i=0, j=1, THIS=this; //log(oParams);

                while(i<l){ //Recorremos oParams
                    //Selects Dependientes
                    var selA   = $(oParams[i].ids[0]);
                    var selB   = $(oParams[i].ids[1]);

                    //Selectores de selects dependientes
                    var sSelA  = oParams[i].ids[0];
                    var sSelB  = oParams[i].ids[1];

                    //Llenando arbol de dependencias
                    treeDeps[sSelA]=[sSelB];  //inicial
                    for(var j=i+1; j<l; j++){
                        var nextSelA = oParams[j].ids[0];  //siguiente selector selDepA
                        var nextSelB = oParams[j].ids[1];  //siguiente selector selDepA
                        var ultSelDep= treeDeps[sSelA][ treeDeps[sSelA].length-1 ]; //Ultimo selector dep de selA (osea selector selDepB actual)
                        if(ultSelDep==nextSelA){treeDeps[sSelA].push(nextSelB)}   //Si el ultimo actual es igual siguiente se adiciona al actual como dependiente tmb.
                    }

                    var errMsg = oParams[i].errMsg;
                    this.clsBtn = $(btnSubmit(selA)).hasClass('btn');

                    //setTreeDeps(oParams, i);
                    /*@param idB: paramtro cuan*/
                    selA.bind('change', (function(i, selB, errMsg){
                        return function(e, idB){
                            var valSel  = $.trim($('option:selected',this).val());
                            var objDeps = $( treeDeps["#"+this.id].join(',') );
                            /*IF es val vacio FIN*/ 
                            /*log('valSel:--->',valSel);
                            log('objDeps:-->',objDeps);*/
                            if(valSel==''||valSel=='-1'){objDeps.html('').append('<option value="">No hay registros</option>');return}
                            /*ELSE desactivacion y peticion xhr*/
                            objDeps.prop('disabled', true);
                            btnSubmit(this).prop('disabled', true).addClass((THIS.clsBtn?'':'btn ')+'disabled');
                            var url = setUrl(oParams[i].url, [valSel]); console.log('url:',url,'valSel:',valSel);
                            ajxReq(url, THIS.success(selB, idB, arguments[2], errMsg));                            
                        };
                    })(i++, selB, errMsg)); 
                }
            },
            /*
             *@param selB: select dependiente
             *@param arg1: segundo parametro pasado al hacer trigger al evento padre (Selected index)
             *@param arg2: tercer  parametro pasado al hacer trigger al evento padre (Value)
             *Evento al cargar completamente la data para selB a peticion de selA */
            success: function(selB/*, evtParm*/){
                var THIS=this;
                var Args=arguments; console.log("Args : -----> ",Args);
                return function(res){
                    selB.prop('disabled', false).html('').parent().children('label.error').remove();
                    btnSubmit(selB).prop('disabled', false).removeClass((THIS.clsBtn?'':'btn ')+'disabled');
                    console.log("selB: ",selB, "res.status: "+res.status,"|res.data.length:"+res.data.length);
                    if(res.status=='ok' && res.data.length>0){
                        $.each(res.data, function(i,v){
                            selB.append( $('<option value="'+v.key+'">'+v.value.toLowerCase()+'</option>').attr('selected',(v.key==Args[1])) );
                        });
                        selB.css('border-color','#CCC').trigger('change',[Args[2]]).parent().children('label.error').remove();
                    }else{
                        selB.append('<option value="">No hay registros</option>').trigger('change', [Args[2]]).attr('disabled', true);
                        if(typeof(Args[3])!=='undefined')
                            selB.css('border-color','#B94A48').parent().append('<label generated="true" class="error">'+Args[3]+'</label>');
                    }
                };
            }/*.cache('sel-dep-succ')*/,

            destroy: function(){ /*Que hacer cuando se destruya la instancia del modulo aca*/ }
        };

    })();
    
    // implementacion selects Dependientes
    SelDep.init([
        {ids:['#search-dpto' ,'#search-prov'], url:'/portal/index/prov?idDpto=$1'},
        {ids:['#search-prov' ,'#dist1,#dist2,#dist3'], url:'/portal/index/dist?idProv=$1'}
    ]);
    
    // Charge tab mapa 
    var fncLoadMap = function(){
        $('#renderMap')[0].onload = function(){
            console.log('load iframe');
            $('#imgLoader')[0].style.display = 'none';
            $('#renderMap')[0].style.display = 'block';
            $('#triggerMap').unbind('click',fncLoadMap);
        };
        $('#renderMap')[0].src = URL_BASE+'/portal/index/rendermap';
    };
    $('#triggerMap').bind('click', fncLoadMap);
});